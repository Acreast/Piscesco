@model IEnumerable<Piscesco.Models.Product>
@using Piscesco.Controllers

@{
    ViewData["Title"] = "Browse Product";
    Layout = "~/Views/Shared/_Layout.cshtml";
    BlobsController bc = new BlobsController();
}

@using Microsoft.AspNetCore.Identity
@using Piscesco.Areas.Identity.Data

@inject SignInManager<PiscescoUser> SignInManager
@inject UserManager<PiscescoUser> UserManager

<h1>Browse Product</h1>
<p>
    <a asp-action="Create" asp-route-stallID="">View Cart List</a>
</p>

<!-- method and action being left empty due to action to submit at the same page. method if didnt mention will automatically defined as get method -->
<form>
    <!-- provide a text box for filteration based on the product name -->
    Enter your product name: <input type="text" name="ProductName" />
    <br /><br />
    <input type="submit" name="search" value="Search Product" />
    <br /><br />
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductUnit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductImage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StallID)
            </th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td class="center-td">
                @Html.DisplayFor(modelItem => item.ProductID)
            </td>
            <td class="center-td" style="max-width:75px">
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td class="center-td description-td">
                @Html.DisplayFor(modelItem => item.ProductDescription)
            </td>
            <td class="center-td">
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td class="center-td">
                @Html.DisplayFor(modelItem => item.ProductUnit)
            </td>
            <td class="center-td">
                @Html.DisplayFor(modelItem => item.Stock)
            </td>
            <td style="text-align:center" class="description-td">
                <img src="@bc.GetImage(item.ProductImage)" style="max-height:75px;max-width:100px" />
            </td>
            <td class="center-td">
                @Html.DisplayFor(modelItem => item.StallID)
            </td>
            @if (SignInManager.IsSignedIn(User))
            {
                var loginSession = await UserManager.FindByIdAsync(UserManager.GetUserId(User));

                <td class="center-td">
                    @if (loginSession.Role.Equals("Customer"))
                    {
                        var parms = new Dictionary<string, string>
                        {
                                    { "OrderID", loginSession.OrderID },
                                    { "ProductID", item.ProductID.ToString() },
                                    { "ProductQuantity", "1"}
                        };
                        <form asp-controller="TablesController" asp-action="AddOrderItem" 
                              asp-route-OrderID="@loginSession.OrderID" 
                              asp-route-ProductID="@item.ProductID.ToString()" 
                              asp-route-ProductQuantity="1">
                            <input type="submit" value="Add to Cart" />
                        </form>
                        
                    }
                    <a asp-action="Details" asp-route-id="@item.ProductID">View Details</a>
                </td>
            }
        </tr>
        }
    </tbody>
</table>
